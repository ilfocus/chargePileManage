2016.06.27
1.实现第一次加载首页数据时，先从本地数据库中获得充电桩List数据，通过下拉刷新获得新数据
2.设定用户级别
3.在历史记录界面添加查询功能，包括桩号查询和充电桩用户查询
4.在UINavigationItem中添加搜索按钮
5.设置点击搜索按钮时跳出搜索界面（界面还未优化）
6.添加历史界面的模型类，用于在接收到历史数据后，转到界面中显示
// 还未完成
7.添加上拉与下拉刷新功能，用于加载网络数据，并存储到数据库中
8.把数据添加到模型中，用于界面显示。
9.历史记录界面，在供电记录界面，当下拉TableView时，选择按钮会跳到充电记录界面中。

2016.06.24
1.实现每一台充电桩都显示自己对应的数据
2.充电桩列表中显示充电桩当前状态及当天的总费用
3.添加屏幕适配判断
4.重新设计详细数据弹出框界面，来完成屏幕适配
5.缩短主界面刷新时间
6.调整启动时，密码输入框位置，以适应不同屏幕尺寸
7.把从本地服务得到的充电桩List数据保存到数据库中（与BOMB获得的数据不同，所以要重新调整）
8.第一次加载首页时，先从本地库中获得数据，刷新时从网络加载，并存入本地数据库（还未完成）


2016.06.23
1.更改并调整主界面中充电桩图标
2.主界面中充电桩数目去重，排序，桩号格式化
3.实现分类，简化去重、排序代码
4.访问本地服务器，充电桩List与充电桩Detail
5.实现访问本地服务器，对实现方法进行封装
6.对网络加载充电桩List方法进行修改，实现本地服务器也可以加载数据
7.通过更改代码，实现APP可以选择通过BOMB或是本地服务器加载数据

PS:访问链接:  访问桩列表:  http://192.168.1.111:8080/cpserver/getChargePileList
            访问详细数据:http://192.168.1.111:8080/cpserver/getChargePileDetail
            访问1号桩的详细数据:http://192.168.1.111:8080/cpserver/getChargePileDetail/?cpid=CP000001

2016.06.22
1.给首页界面添加总费用,并从bomb获得充电桩数量
2.整理服务器端的数据表
3.调整PileListCell，在其中添加费用显示
4.实现可以随意添加和删除QCPileListController中的PileListCell。可以根据服务器中的数据来更新充电桩列表。
5.编写网络请求类QCHttpTool用来封装网络请求(目前封装了Bomb请求命令）
6.编写访问充电桩数目网络请求，并实现从服务器取下多个充电桩桩号
7.解决更新QCPileListController中Cell数量时,出现程序崩溃Bug(此时indexPath.row > group.items.count).
8.刷新数据，并能够在QCPileListController界面上以列表形式显示充电桩数目（此数目从服务器得到）

2016.06.21
1.添加数据库执行方法，封装类，用以操作数据库
2.实现创建数据库，并能够向数据库中写入数据
3.安装第三方工具，并查看创建的数据库数据
4.设计数据库内容,确定数据库内容设计形式
5.在数据库中，用一张表存储充电桩号，再用这张表中每个充电桩号对应创建一个表，用来存储充电桩的数据
6.设计完成表存储充电桩号的表格
7.设计完成存储充电桩数据的表，表中数据进行数据格式化，归档操作.
8.完成充电桩桩号、充电桩数据保存。

2016.06.20
1.修改历史记录tableView的footerView
2.添加个人资料页面中的意见反馈模块
3.添加数据库.
4.服务器访问网址：192.168.1.111:8080/cpserver/getChargePileList
5.添加网络访问模块，并实现访问搭建的服务器。
6.服务器中数据，字符解析


2016.06.17
1.修正历史记录问题，不能滚动问题
2.调整登录界面，以适应不同机型
3.完善个人资料页面
4.添加了保存按钮，修改昵称和修改个性签名，重新设置密码
5.完成重新设置密码界面
6.添加头像部分及性别选择部分
7.向右指示箭头消失。。。。已解决（代码写错了）
8.实现了头像部分及性别选择部分界面展示


2016.06.16
1.解决了历史记录部分UITableView底部被遮挡的问题
2.编写个人资料模块,并添加模块内容
3.添加退出登录按钮，调整按钮位置及背景图片
4.点击退出登录时，可以回到登录界面，弹出确定对话框
5.添加第三方颜色库，给退出登录按钮设置成深绿色
6.解决桩列表、历史记录、系统管理中，UITableView的HeaderView距离过大问题
7.更改UINavigationController和UITabbarController的外观样式
8.设置登录界面外观(登录界面还需要添加滚动控制器，以来适应不同机型完成输入账号密码登录)
9.在登录界面，点输入框时，弹出键盘。任意点击界面或是点击键盘上的完成，可退出键盘。


2016.06.15
1.历史记录界面设置，一个ScrollView上添加两个TableView.两个TableView分别显示不同的内容
2.自定义两个TableView中的UITableViewCell，实现分别显示充电记录内容和供电记录内容
3.添加一个分段控制器，实现点击分段控制器时，进行TableView的切换
4.滚动ScrollView上的TableView时，能实现自动选中分段控制器
5.实现系统管理部分的头部View部分
6.为了把头部添加到系统管理部分，重新设置系统管理部分
7.搭建了系统管理部分界面，并添加了头部View
8.历史记录部分UITableView底部被遮挡

2016.06.14
1.重写字符串为空判断程序
2.当用户名或是密码为空时或是错误时，有提醒功能.
3.自动登录功能
4.当登录成功后，可通过注销登录或是切换帐号功能来返回到登录界面

5.搭建历史记录界面


2016.06.13
1.以xib形式创建用户登录界面
2.在xib界面上，添加控件，完成界面搭建
3.采用autoLayer进行登录界面布局
4.xib文件是后添加到登录模块的，导致一直加载故障
5.重新创建QCLoginCtrl部分，并在创建时候添加xib文件，解决加载xib文件故障问题。
6.添加保存自动登录和记住密码状态的功能
7.保存用户名和密码
8.添加第三方库，实现状态指示器，用于显示信息，给用户提醒。


2016.06.12
1.CUICatalog: Invalid asset name supplied: 问题，解决方法：//tableViewCell.imageView.image = [UIImage imageNamed:model.image];
2.点击充电详细信息中，可以弹出UI界面，并能够展示充电的详细数据信息。
3.设计充电桩启停模块，并为每个按钮添加点击事件
4.点击按钮，弹出密码输入框(已完成)
5.添加刷新数据功能，上拉刷新（并添加了动态效果）




2016.06.03
实现内容：
    帐号权限管理
    充电信息数据展示，以弹框形式表现。
    充电桩启停---弹框输入密码
1.开会讨论APP实现问题
2.更改实现需求
3.充电信息模块，重新设计。在模块中添加一个Button，当点击button时候，可以显示具体充电信息。
4.点击详细信息时，实现弹出框效果---还在写实现代码。


2016.06.02
1.解决UIScrollView滚动问题，主要是frame大小设置问题，应该比contentSize要小
2.设置故障模块---圆形View裁剪
3.重构QCFaultInfo模块，封装里面title及故障指示灯，生成类QCFaultView
4.子控件frame设置后，如果父控件的frame还没有设置，则子控件则会以父类的父类来设置frame.
5.完成故障模块功能。
6.调整QCPileListDetail内部模块的Frame,每个模块可以自由设置本身的高度。---可以解决不同机型适配问题
7.调整每个模块背景，使之更加漂亮。
8.


2016.06.01
1.添加PNChart用于图表显示电压电流
2.添加运行状态控制器及故障信息控制器
3.设置PNChart,在设置位置时出现崩溃BUG,
Assertion failure in -[MASViewConstraint addConstraintWithLayoutAttribute:], /Users/yuming/iOS/iOS项目/充电桩管理/chargePileManage/Pods/Masonry/Masonry/MASViewConstraint.m:207
4.给PNChart设置固定尺寸
5.重新设计QCPileListDetailView,准备用UIScrollView添加在上面，然后可以上面的每个view都能显示比较多内容。

2016.05.31
1.完善服务器发送程序，添加了告警和机器地址等部分，解决了服务器发送程序的BUG.主要是添加了故障部分后出现的
2.完善了QCFaultInfoView部分，添加了故障刷程序。
3.完善了QCChargeInfInfoView部分，添加了刷新程序。
4.完善了QCBatteryInfInfoView部分，添加了刷新程序。
5.查看服务器端数据，其中数组中0地址部分为服务器中最先的数据，数据有时候会出现大部分为空的情况。
6.每一个充电桩在服务器中应该对应一张表
7.调用刷新程序，实现QCPileListDetailCtrl界面数据刷新


2016.05.25
1.完善TabBar功能，实现控制器切换
2.实现桩列表

2016.05.18
1.创建充电桩管理软件

#pragma mark - life cycle

#pragma mark - UITableViewDateSource

#pragma mark - UITableViewDelegate

#pragma mark - CustomDelegate

#pragma mark - event response

#pragma mark - private methods

#pragma mark - getters and setters