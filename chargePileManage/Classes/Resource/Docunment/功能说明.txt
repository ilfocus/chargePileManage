2016.06.15
1.历史记录界面设置，一个ScrollView上添加两个TableView.两个TableView分别显示不同的内容
2.自定义两个TableView中的UITableViewCell，实现分别显示充电记录内容和供电记录内容
3.添加一个分段控制器，实现点击分段控制器时，进行TableView的切换
4.滚动ScrollView上的TableView时，能实现自动选中分段控制器
5.实现系统管理部分的头部View部分
6.为了把头部添加到系统管理部分，重新设置系统管理部分
7.搭建了系统管理部分界面，并添加了头部View
8.历史记录部分UITableView底部被遮挡

2016.06.14
1.重写字符串为空判断程序
2.当用户名或是密码为空时或是错误时，有提醒功能.
3.自动登录功能
4.当登录成功后，可通过注销登录或是切换帐号功能来返回到登录界面

5.搭建历史记录界面


2016.06.13
1.以xib形式创建用户登录界面
2.在xib界面上，添加控件，完成界面搭建
3.采用autoLayer进行登录界面布局
4.xib文件是后添加到登录模块的，导致一直加载故障
5.重新创建QCLoginCtrl部分，并在创建时候添加xib文件，解决加载xib文件故障问题。
6.添加保存自动登录和记住密码状态的功能
7.保存用户名和密码
8.添加第三方库，实现状态指示器，用于显示信息，给用户提醒。


2016.06.12
1.CUICatalog: Invalid asset name supplied: 问题，解决方法：//tableViewCell.imageView.image = [UIImage imageNamed:model.image];
2.点击充电详细信息中，可以弹出UI界面，并能够展示充电的详细数据信息。
3.设计充电桩启停模块，并为每个按钮添加点击事件
4.点击按钮，弹出密码输入框(已完成)
5.添加刷新数据功能，上拉刷新（并添加了动态效果）




2016.06.03
实现内容：
    帐号权限管理
    充电信息数据展示，以弹框形式表现。
    充电桩启停---弹框输入密码
1.开会讨论APP实现问题
2.更改实现需求
3.充电信息模块，重新设计。在模块中添加一个Button，当点击button时候，可以显示具体充电信息。
4.点击详细信息时，实现弹出框效果---还在写实现代码。


2016.06.02
1.解决UIScrollView滚动问题，主要是frame大小设置问题，应该比contentSize要小
2.设置故障模块---圆形View裁剪
3.重构QCFaultInfo模块，封装里面title及故障指示灯，生成类QCFaultView
4.子控件frame设置后，如果父控件的frame还没有设置，则子控件则会以父类的父类来设置frame.
5.完成故障模块功能。
6.调整QCPileListDetail内部模块的Frame,每个模块可以自由设置本身的高度。---可以解决不同机型适配问题
7.调整每个模块背景，使之更加漂亮。


2016.06.01
1.添加PNChart用于图表显示电压电流
2.添加运行状态控制器及故障信息控制器
3.设置PNChart,在设置位置时出现崩溃BUG,
Assertion failure in -[MASViewConstraint addConstraintWithLayoutAttribute:], /Users/yuming/iOS/iOS项目/充电桩管理/chargePileManage/Pods/Masonry/Masonry/MASViewConstraint.m:207
4.给PNChart设置固定尺寸
5.重新设计QCPileListDetailView,准备用UIScrollView添加在上面，然后可以上面的每个view都能显示比较多内容。

2016.05.31
1.完善服务器发送程序，添加了告警和机器地址等部分，解决了服务器发送程序的BUG.主要是添加了故障部分后出现的
2.完善了QCFaultInfoView部分，添加了故障刷程序。
3.完善了QCChargeInfInfoView部分，添加了刷新程序。
4.完善了QCBatteryInfInfoView部分，添加了刷新程序。
5.查看服务器端数据，其中数组中0地址部分为服务器中最先的数据，数据有时候会出现大部分为空的情况。
6.每一个充电桩在服务器中应该对应一张表
7.调用刷新程序，实现QCPileListDetailCtrl界面数据刷新


2016.05.25
1.完善TabBar功能，实现控制器切换
2.实现桩列表

2016.05.18
1.创建充电桩管理软件

#pragma mark - life cycle

#pragma mark - UITableViewDateSource

#pragma mark - UITableViewDelegate

#pragma mark - CustomDelegate

#pragma mark - event response

#pragma mark - private methods

#pragma mark - getters and setters